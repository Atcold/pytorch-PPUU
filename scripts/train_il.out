[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=1.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=2.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=3.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=4.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=5.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=6.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=7.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=8.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=9.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=10.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=11.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=12.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=13.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=14.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=15.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=16.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=17.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=18.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=19.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=20.pkl]
8643
[computing action stats]
[done]
will save model as /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards//model=policy-cnn-vae-bsize=32-ncond=10-npred=10-lrt=0.0001-nhidden=100-nfeature=64-nz=4-beta=0.1
[initializing encoder and decoder with: /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards/model=policy-cnn-bsize=32-ncond=10-npred=10-lrt=0.0001-nhidden=100-nfeature=64.model]
[training]
iter 0 | train loss: [MSE: 0.72602, KL: 0.07090], test: [0.76806, KL: 0.02320], best MSE loss: 0.76806
iter 1000 | train loss: [MSE: 0.70787, KL: 0.01697], test: [0.77007, KL: 0.01039], best MSE loss: 0.76806
iter 2000 | train loss: [MSE: 0.70886, KL: 0.00937], test: [0.76177, KL: 0.00670], best MSE loss: 0.76177
iter 3000 | train loss: [MSE: 0.71651, KL: 0.00671], test: [0.76333, KL: 0.00774], best MSE loss: 0.76177
iter 4000 | train loss: [MSE: 0.72309, KL: 0.00862], test: [0.79213, KL: 0.01058], best MSE loss: 0.76177
iter 5000 | train loss: [MSE: 0.70847, KL: 0.01602], test: [0.76683, KL: 0.02107], best MSE loss: 0.76177
iter 6000 | train loss: [MSE: 0.69524, KL: 0.02429], test: [0.76713, KL: 0.03180], best MSE loss: 0.76177
iter 7000 | train loss: [MSE: 0.70032, KL: 0.04488], test: [0.74832, KL: 0.04365], best MSE loss: 0.74832
iter 8000 | train loss: [MSE: 0.68626, KL: 0.06665], test: [0.73878, KL: 0.06127], best MSE loss: 0.73878
iter 9000 | train loss: [MSE: 0.68191, KL: 0.07307], test: [0.74200, KL: 0.06477], best MSE loss: 0.73878
iter 10000 | train loss: [MSE: 0.69766, KL: 0.09405], test: [0.74421, KL: 0.08929], best MSE loss: 0.73878
iter 11000 | train loss: [MSE: 0.68748, KL: 0.10908], test: [0.75231, KL: 0.10750], best MSE loss: 0.73878
iter 12000 | train loss: [MSE: 0.66798, KL: 0.12100], test: [0.73484, KL: 0.11418], best MSE loss: 0.73484
iter 13000 | train loss: [MSE: 0.68079, KL: 0.13723], test: [0.70908, KL: 0.14230], best MSE loss: 0.70908
iter 14000 | train loss: [MSE: 0.67276, KL: 0.14560], test: [0.71597, KL: 0.17393], best MSE loss: 0.70908
iter 15000 | train loss: [MSE: 0.66546, KL: 0.14047], test: [0.70397, KL: 0.14552], best MSE loss: 0.70397
iter 16000 | train loss: [MSE: 0.67461, KL: 0.14613], test: [0.71609, KL: 0.13600], best MSE loss: 0.70397
iter 17000 | train loss: [MSE: 0.66445, KL: 0.15437], test: [0.70055, KL: 0.17003], best MSE loss: 0.70055
iter 18000 | train loss: [MSE: 0.65556, KL: 0.14969], test: [0.71113, KL: 0.19576], best MSE loss: 0.70055
iter 19000 | train loss: [MSE: 0.66970, KL: 0.16011], test: [0.69507, KL: 0.20432], best MSE loss: 0.69507
iter 20000 | train loss: [MSE: 0.67290, KL: 0.15905], test: [0.72814, KL: 0.15939], best MSE loss: 0.69507
iter 21000 | train loss: [MSE: 0.66234, KL: 0.16148], test: [0.70982, KL: 0.15288], best MSE loss: 0.69507
iter 22000 | train loss: [MSE: 0.66195, KL: 0.14873], test: [0.70314, KL: 0.18561], best MSE loss: 0.69507
iter 23000 | train loss: [MSE: 0.66783, KL: 0.15320], test: [0.69233, KL: 0.15978], best MSE loss: 0.69233
iter 24000 | train loss: [MSE: 0.66147, KL: 0.15490], test: [0.72095, KL: 0.16820], best MSE loss: 0.69233
iter 25000 | train loss: [MSE: 0.65624, KL: 0.15507], test: [0.69544, KL: 0.21026], best MSE loss: 0.69233
iter 26000 | train loss: [MSE: 0.66994, KL: 0.15750], test: [0.70570, KL: 0.19073], best MSE loss: 0.69233
iter 27000 | train loss: [MSE: 0.66183, KL: 0.15180], test: [0.70313, KL: 0.17262], best MSE loss: 0.69233
iter 28000 | train loss: [MSE: 0.64934, KL: 0.14975], test: [0.69703, KL: 0.14730], best MSE loss: 0.69233
iter 29000 | train loss: [MSE: 0.64520, KL: 0.15114], test: [0.70873, KL: 0.20083], best MSE loss: 0.69233
iter 30000 | train loss: [MSE: 0.65118, KL: 0.15561], test: [0.71286, KL: 0.17949], best MSE loss: 0.69233
iter 31000 | train loss: [MSE: 0.63545, KL: 0.14604], test: [0.69170, KL: 0.17051], best MSE loss: 0.69170
iter 32000 | train loss: [MSE: 0.64728, KL: 0.13718], test: [0.72802, KL: 0.13843], best MSE loss: 0.69170
iter 33000 | train loss: [MSE: 0.63816, KL: 0.13827], test: [0.73373, KL: 0.17009], best MSE loss: 0.69170
iter 34000 | train loss: [MSE: 0.65163, KL: 0.14551], test: [0.71013, KL: 0.17053], best MSE loss: 0.69170
iter 35000 | train loss: [MSE: 0.65368, KL: 0.14264], test: [0.69020, KL: 0.15997], best MSE loss: 0.69020
iter 36000 | train loss: [MSE: 0.65138, KL: 0.13515], test: [0.72081, KL: 0.16039], best MSE loss: 0.69020
iter 37000 | train loss: [MSE: 0.63636, KL: 0.12766], test: [0.72333, KL: 0.19185], best MSE loss: 0.69020
iter 38000 | train loss: [MSE: 0.64256, KL: 0.12689], test: [0.71586, KL: 0.16471], best MSE loss: 0.69020
iter 39000 | train loss: [MSE: 0.64006, KL: 0.13185], test: [0.70939, KL: 0.18648], best MSE loss: 0.69020
iter 40000 | train loss: [MSE: 0.63859, KL: 0.13217], test: [0.71858, KL: 0.15278], best MSE loss: 0.69020
iter 41000 | train loss: [MSE: 0.63999, KL: 0.12758], test: [0.70554, KL: 0.17591], best MSE loss: 0.69020
iter 42000 | train loss: [MSE: 0.65181, KL: 0.12727], test: [0.72031, KL: 0.17928], best MSE loss: 0.69020
iter 43000 | train loss: [MSE: 0.65586, KL: 0.13040], test: [0.72918, KL: 0.16615], best MSE loss: 0.69020
iter 44000 | train loss: [MSE: 0.64515, KL: 0.12669], test: [0.71592, KL: 0.14002], best MSE loss: 0.69020
iter 45000 | train loss: [MSE: 0.64928, KL: 0.12765], test: [0.72283, KL: 0.13309], best MSE loss: 0.69020
iter 46000 | train loss: [MSE: 0.63840, KL: 0.12332], test: [0.72634, KL: 0.14498], best MSE loss: 0.69020
iter 47000 | train loss: [MSE: 0.64812, KL: 0.11915], test: [0.73736, KL: 0.10712], best MSE loss: 0.69020
iter 48000 | train loss: [MSE: 0.64170, KL: 0.11611], test: [0.71301, KL: 0.19513], best MSE loss: 0.69020
iter 49000 | train loss: [MSE: 0.64130, KL: 0.11758], test: [0.72978, KL: 0.13001], best MSE loss: 0.69020
iter 50000 | train loss: [MSE: 0.63896, KL: 0.11682], test: [0.72842, KL: 0.14284], best MSE loss: 0.69020
iter 51000 | train loss: [MSE: 0.62261, KL: 0.11196], test: [0.73248, KL: 0.14298], best MSE loss: 0.69020
iter 52000 | train loss: [MSE: 0.62463, KL: 0.11501], test: [0.72474, KL: 0.12763], best MSE loss: 0.69020
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=1.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=2.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=3.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=4.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=5.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=6.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=7.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=8.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=9.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=10.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=11.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=12.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=13.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=14.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=15.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=16.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=17.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=18.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=19.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=20.pkl]
8643
[computing action stats]
[done]
will save model as /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards//model=policy-cnn-vae-bsize=32-ncond=10-npred=10-lrt=0.0001-nhidden=100-nfeature=64-nz=4-beta=0.001
[initializing encoder and decoder with: /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards/model=policy-cnn-bsize=32-ncond=10-npred=10-lrt=0.0001-nhidden=100-nfeature=64.model]
[training]
iter 0 | train loss: [MSE: 0.71312, KL: 0.34608], test: [0.72387, KL: 0.49484], best MSE loss: 0.72387
iter 1000 | train loss: [MSE: 0.68889, KL: 1.25133], test: [0.66626, KL: 1.66017], best MSE loss: 0.66626
iter 2000 | train loss: [MSE: 0.65414, KL: 2.30684], test: [0.64173, KL: 2.83448], best MSE loss: 0.64173
iter 3000 | train loss: [MSE: 0.64663, KL: 2.94528], test: [0.62355, KL: 3.02082], best MSE loss: 0.62355
iter 4000 | train loss: [MSE: 0.62695, KL: 3.49354], test: [0.61681, KL: 3.37107], best MSE loss: 0.61681
iter 5000 | train loss: [MSE: 0.60686, KL: 3.92740], test: [0.61428, KL: 3.64183], best MSE loss: 0.61428
iter 6000 | train loss: [MSE: 0.60761, KL: 4.32380], test: [0.59660, KL: 4.05871], best MSE loss: 0.59660
iter 7000 | train loss: [MSE: 0.59942, KL: 4.68800], test: [0.61481, KL: 4.59974], best MSE loss: 0.59660
iter 8000 | train loss: [MSE: 0.60291, KL: 4.89638], test: [0.59100, KL: 4.54347], best MSE loss: 0.59100
iter 9000 | train loss: [MSE: 0.57765, KL: 5.43774], test: [0.56132, KL: 5.64136], best MSE loss: 0.56132
iter 10000 | train loss: [MSE: 0.55840, KL: 6.32269], test: [0.54945, KL: 6.46029], best MSE loss: 0.54945
iter 11000 | train loss: [MSE: 0.55564, KL: 7.02401], test: [0.53915, KL: 6.81166], best MSE loss: 0.53915
iter 12000 | train loss: [MSE: 0.55411, KL: 7.35490], test: [0.54374, KL: 7.06160], best MSE loss: 0.53915
iter 13000 | train loss: [MSE: 0.54068, KL: 7.50804], test: [0.53603, KL: 7.26835], best MSE loss: 0.53603
iter 14000 | train loss: [MSE: 0.53770, KL: 7.63205], test: [0.53413, KL: 7.19147], best MSE loss: 0.53413
iter 15000 | train loss: [MSE: 0.51929, KL: 7.66937], test: [0.53151, KL: 7.41453], best MSE loss: 0.53151
iter 16000 | train loss: [MSE: 0.54165, KL: 7.78281], test: [0.51382, KL: 7.43458], best MSE loss: 0.51382
iter 17000 | train loss: [MSE: 0.53034, KL: 7.86186], test: [0.51624, KL: 7.48079], best MSE loss: 0.51382
iter 18000 | train loss: [MSE: 0.52727, KL: 8.03699], test: [0.50586, KL: 7.77353], best MSE loss: 0.50586
iter 19000 | train loss: [MSE: 0.49569, KL: 8.50175], test: [0.49209, KL: 8.34379], best MSE loss: 0.49209
iter 20000 | train loss: [MSE: 0.48812, KL: 9.00174], test: [0.45829, KL: 8.88239], best MSE loss: 0.45829
iter 21000 | train loss: [MSE: 0.48509, KL: 9.36952], test: [0.46240, KL: 8.91763], best MSE loss: 0.45829
iter 22000 | train loss: [MSE: 0.48669, KL: 9.59400], test: [0.43533, KL: 9.42997], best MSE loss: 0.43533
iter 23000 | train loss: [MSE: 0.46325, KL: 9.77814], test: [0.45297, KL: 9.66612], best MSE loss: 0.43533
iter 24000 | train loss: [MSE: 0.46808, KL: 9.90869], test: [0.45277, KL: 9.82149], best MSE loss: 0.43533
iter 25000 | train loss: [MSE: 0.45692, KL: 10.01381], test: [0.43512, KL: 9.70212], best MSE loss: 0.43512
iter 26000 | train loss: [MSE: 0.44539, KL: 10.05157], test: [0.42995, KL: 9.70950], best MSE loss: 0.42995
iter 27000 | train loss: [MSE: 0.46407, KL: 10.10060], test: [0.43228, KL: 9.76373], best MSE loss: 0.42995
iter 28000 | train loss: [MSE: 0.45634, KL: 10.16893], test: [0.42644, KL: 9.82185], best MSE loss: 0.42644
iter 29000 | train loss: [MSE: 0.44571, KL: 10.21800], test: [0.41906, KL: 9.79178], best MSE loss: 0.41906
iter 30000 | train loss: [MSE: 0.43652, KL: 10.21663], test: [0.42877, KL: 9.96774], best MSE loss: 0.41906
iter 31000 | train loss: [MSE: 0.44325, KL: 10.25783], test: [0.41850, KL: 10.04747], best MSE loss: 0.41850
iter 32000 | train loss: [MSE: 0.43906, KL: 10.33550], test: [0.40735, KL: 10.01150], best MSE loss: 0.40735
iter 33000 | train loss: [MSE: 0.42981, KL: 10.37072], test: [0.40868, KL: 10.02557], best MSE loss: 0.40735
iter 34000 | train loss: [MSE: 0.42647, KL: 10.40157], test: [0.41943, KL: 9.89635], best MSE loss: 0.40735
iter 35000 | train loss: [MSE: 0.42332, KL: 10.40547], test: [0.41155, KL: 10.03228], best MSE loss: 0.40735
iter 36000 | train loss: [MSE: 0.43525, KL: 10.46575], test: [0.40559, KL: 10.01951], best MSE loss: 0.40559
iter 37000 | train loss: [MSE: 0.43070, KL: 10.43504], test: [0.40106, KL: 9.97282], best MSE loss: 0.40106
iter 38000 | train loss: [MSE: 0.41108, KL: 10.50239], test: [0.39699, KL: 10.04879], best MSE loss: 0.39699
iter 39000 | train loss: [MSE: 0.41368, KL: 10.52231], test: [0.39861, KL: 10.44352], best MSE loss: 0.39699
iter 40000 | train loss: [MSE: 0.41435, KL: 10.53858], test: [0.38371, KL: 10.14645], best MSE loss: 0.38371
iter 41000 | train loss: [MSE: 0.40985, KL: 10.55338], test: [0.38506, KL: 10.28128], best MSE loss: 0.38371
iter 42000 | train loss: [MSE: 0.41318, KL: 10.61637], test: [0.38803, KL: 10.20828], best MSE loss: 0.38371
iter 43000 | train loss: [MSE: 0.41051, KL: 10.68172], test: [0.38189, KL: 10.16750], best MSE loss: 0.38189
iter 44000 | train loss: [MSE: 0.40174, KL: 10.68371], test: [0.38406, KL: 10.31869], best MSE loss: 0.38189
iter 45000 | train loss: [MSE: 0.40617, KL: 10.74499], test: [0.38935, KL: 10.25216], best MSE loss: 0.38189
iter 46000 | train loss: [MSE: 0.39387, KL: 10.81453], test: [0.36951, KL: 10.58062], best MSE loss: 0.36951
iter 47000 | train loss: [MSE: 0.40445, KL: 10.82806], test: [0.38214, KL: 10.47170], best MSE loss: 0.36951
iter 48000 | train loss: [MSE: 0.39410, KL: 10.81268], test: [0.36965, KL: 10.28474], best MSE loss: 0.36951
iter 49000 | train loss: [MSE: 0.38999, KL: 10.89157], test: [0.37123, KL: 10.61736], best MSE loss: 0.36951
iter 50000 | train loss: [MSE: 0.39666, KL: 10.91834], test: [0.36951, KL: 10.55194], best MSE loss: 0.36951
iter 51000 | train loss: [MSE: 0.37981, KL: 10.93407], test: [0.36046, KL: 10.38405], best MSE loss: 0.36046
iter 52000 | train loss: [MSE: 0.39306, KL: 10.96113], test: [0.36001, KL: 10.57934], best MSE loss: 0.36001
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=1.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=2.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=3.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=4.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=5.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=6.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=7.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=8.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=9.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=10.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=11.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=12.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=13.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=14.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=15.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=16.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=17.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=18.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=19.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=20.pkl]
8643
[computing action stats]
[done]
will save model as /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards//model=policy-cnn-vae-bsize=32-ncond=10-npred=20-lrt=0.0001-nhidden=100-nfeature=64-nz=4-beta=0.001
[initializing encoder and decoder with: /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards/model=policy-cnn-bsize=32-ncond=10-npred=20-lrt=0.0001-nhidden=100-nfeature=64.model]
[training]
iter 0 | train loss: [MSE: 0.76396, KL: 1.24436], test: [0.73895, KL: 2.38572], best MSE loss: 0.73895
iter 1000 | train loss: [MSE: 0.71064, KL: 3.28220], test: [0.71271, KL: 3.56710], best MSE loss: 0.71271
iter 2000 | train loss: [MSE: 0.69596, KL: 4.16393], test: [0.67489, KL: 4.08592], best MSE loss: 0.67489
iter 3000 | train loss: [MSE: 0.66519, KL: 4.83242], test: [0.66165, KL: 4.60629], best MSE loss: 0.66165
iter 4000 | train loss: [MSE: 0.65536, KL: 5.53149], test: [0.63870, KL: 4.92284], best MSE loss: 0.63870
iter 5000 | train loss: [MSE: 0.64532, KL: 6.13452], test: [0.65127, KL: 6.47633], best MSE loss: 0.63870
iter 6000 | train loss: [MSE: 0.62831, KL: 6.83246], test: [0.62946, KL: 6.65273], best MSE loss: 0.62946
iter 7000 | train loss: [MSE: 0.62438, KL: 7.33050], test: [0.62584, KL: 7.34873], best MSE loss: 0.62584
iter 8000 | train loss: [MSE: 0.61010, KL: 7.70154], test: [0.61308, KL: 7.17446], best MSE loss: 0.61308
iter 9000 | train loss: [MSE: 0.60200, KL: 7.79975], test: [0.62313, KL: 7.33700], best MSE loss: 0.61308
iter 10000 | train loss: [MSE: 0.61408, KL: 7.90954], test: [0.61919, KL: 7.43020], best MSE loss: 0.61308
iter 11000 | train loss: [MSE: 0.60250, KL: 8.08375], test: [0.61835, KL: 7.57810], best MSE loss: 0.61308
iter 12000 | train loss: [MSE: 0.60876, KL: 8.21160], test: [0.60126, KL: 7.76082], best MSE loss: 0.60126
iter 13000 | train loss: [MSE: 0.59914, KL: 8.29094], test: [0.60568, KL: 7.77952], best MSE loss: 0.60126
iter 14000 | train loss: [MSE: 0.59118, KL: 8.33496], test: [0.61007, KL: 7.77977], best MSE loss: 0.60126
iter 15000 | train loss: [MSE: 0.59714, KL: 8.40623], test: [0.60535, KL: 7.88757], best MSE loss: 0.60126
iter 16000 | train loss: [MSE: 0.58165, KL: 8.46229], test: [0.60326, KL: 8.15016], best MSE loss: 0.60126
iter 17000 | train loss: [MSE: 0.58361, KL: 8.50988], test: [0.59650, KL: 8.02548], best MSE loss: 0.59650
iter 18000 | train loss: [MSE: 0.58794, KL: 8.56245], test: [0.61297, KL: 8.31592], best MSE loss: 0.59650
iter 19000 | train loss: [MSE: 0.58058, KL: 8.61340], test: [0.60343, KL: 7.92627], best MSE loss: 0.59650
iter 20000 | train loss: [MSE: 0.58768, KL: 8.62490], test: [0.59064, KL: 8.09049], best MSE loss: 0.59064
iter 21000 | train loss: [MSE: 0.57484, KL: 8.62025], test: [0.58803, KL: 8.26420], best MSE loss: 0.58803
iter 22000 | train loss: [MSE: 0.57961, KL: 8.62336], test: [0.59225, KL: 8.15384], best MSE loss: 0.58803
iter 23000 | train loss: [MSE: 0.57741, KL: 8.66759], test: [0.59261, KL: 8.23146], best MSE loss: 0.58803
iter 24000 | train loss: [MSE: 0.57605, KL: 8.74653], test: [0.59551, KL: 8.36695], best MSE loss: 0.58803
iter 25000 | train loss: [MSE: 0.57401, KL: 8.76566], test: [0.58065, KL: 8.65077], best MSE loss: 0.58065
iter 26000 | train loss: [MSE: 0.57213, KL: 8.77570], test: [0.58877, KL: 8.41804], best MSE loss: 0.58065
iter 27000 | train loss: [MSE: 0.57495, KL: 8.83398], test: [0.59001, KL: 8.57715], best MSE loss: 0.58065
iter 28000 | train loss: [MSE: 0.57373, KL: 8.83782], test: [0.59541, KL: 8.33188], best MSE loss: 0.58065
iter 29000 | train loss: [MSE: 0.56017, KL: 8.90275], test: [0.57642, KL: 8.68906], best MSE loss: 0.57642
iter 30000 | train loss: [MSE: 0.57930, KL: 8.87358], test: [0.59270, KL: 8.56002], best MSE loss: 0.57642
iter 31000 | train loss: [MSE: 0.56729, KL: 8.88631], test: [0.57948, KL: 8.57030], best MSE loss: 0.57642
iter 32000 | train loss: [MSE: 0.55815, KL: 8.93594], test: [0.57869, KL: 8.48891], best MSE loss: 0.57642
iter 33000 | train loss: [MSE: 0.56589, KL: 8.97274], test: [0.58417, KL: 8.33383], best MSE loss: 0.57642
iter 34000 | train loss: [MSE: 0.56101, KL: 8.97067], test: [0.57924, KL: 8.49515], best MSE loss: 0.57642
iter 35000 | train loss: [MSE: 0.55770, KL: 8.99546], test: [0.57460, KL: 8.69493], best MSE loss: 0.57460
iter 36000 | train loss: [MSE: 0.55133, KL: 9.00037], test: [0.56709, KL: 8.85070], best MSE loss: 0.56709
iter 37000 | train loss: [MSE: 0.55504, KL: 9.00815], test: [0.57711, KL: 8.66560], best MSE loss: 0.56709
iter 38000 | train loss: [MSE: 0.55828, KL: 9.02277], test: [0.57361, KL: 8.65655], best MSE loss: 0.56709
iter 39000 | train loss: [MSE: 0.55814, KL: 8.98821], test: [0.57880, KL: 8.68203], best MSE loss: 0.56709
iter 40000 | train loss: [MSE: 0.54602, KL: 8.98618], test: [0.56891, KL: 8.82337], best MSE loss: 0.56709
iter 41000 | train loss: [MSE: 0.55442, KL: 8.97870], test: [0.58015, KL: 8.58136], best MSE loss: 0.56709
iter 42000 | train loss: [MSE: 0.55650, KL: 8.96086], test: [0.58045, KL: 8.40353], best MSE loss: 0.56709
iter 43000 | train loss: [MSE: 0.55324, KL: 9.00013], test: [0.56565, KL: 8.74781], best MSE loss: 0.56565
iter 44000 | train loss: [MSE: 0.54536, KL: 9.07856], test: [0.57183, KL: 8.78847], best MSE loss: 0.56565
iter 45000 | train loss: [MSE: 0.54545, KL: 9.07384], test: [0.57196, KL: 8.78622], best MSE loss: 0.56565
iter 46000 | train loss: [MSE: 0.55311, KL: 9.04557], test: [0.58097, KL: 8.74354], best MSE loss: 0.56565
iter 47000 | train loss: [MSE: 0.54993, KL: 9.10300], test: [0.57541, KL: 8.66019], best MSE loss: 0.56565
iter 48000 | train loss: [MSE: 0.54665, KL: 9.10971], test: [0.57390, KL: 8.79042], best MSE loss: 0.56565
iter 49000 | train loss: [MSE: 0.54227, KL: 9.10692], test: [0.57035, KL: 8.74660], best MSE loss: 0.56565
iter 50000 | train loss: [MSE: 0.55728, KL: 9.09185], test: [0.57533, KL: 8.91612], best MSE loss: 0.56565
iter 51000 | train loss: [MSE: 0.54632, KL: 9.15011], test: [0.57090, KL: 8.81790], best MSE loss: 0.56565
iter 52000 | train loss: [MSE: 0.54471, KL: 9.09582], test: [0.56907, KL: 8.83792], best MSE loss: 0.56565
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=1.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=2.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=3.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=4.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=5.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=6.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=7.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=8.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=9.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=10.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=11.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=12.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=13.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=14.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=15.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=16.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=17.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=18.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=19.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=20.pkl]
8643
[computing action stats]
[done]
will save model as /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards//model=policy-cnn-vae-bsize=32-ncond=10-npred=10-lrt=0.0001-nhidden=100-nfeature=64-nz=4-beta=1.0
[initializing encoder and decoder with: /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards/model=policy-cnn-bsize=32-ncond=10-npred=10-lrt=0.0001-nhidden=100-nfeature=64.model]
[training]
iter 0 | train loss: [MSE: 0.71016, KL: 0.05913], test: [0.78346, KL: 0.00873], best MSE loss: 0.78346
iter 1000 | train loss: [MSE: 0.71612, KL: 0.00554], test: [0.76547, KL: 0.00242], best MSE loss: 0.76547
iter 2000 | train loss: [MSE: 0.71705, KL: 0.00210], test: [0.78012, KL: 0.00113], best MSE loss: 0.76547
iter 3000 | train loss: [MSE: 0.71504, KL: 0.00106], test: [0.77668, KL: 0.00066], best MSE loss: 0.76547
iter 4000 | train loss: [MSE: 0.71407, KL: 0.00064], test: [0.76806, KL: 0.00039], best MSE loss: 0.76547
iter 5000 | train loss: [MSE: 0.70559, KL: 0.00040], test: [0.76396, KL: 0.00028], best MSE loss: 0.76396
iter 6000 | train loss: [MSE: 0.69868, KL: 0.00027], test: [0.78178, KL: 0.00019], best MSE loss: 0.76396
iter 7000 | train loss: [MSE: 0.71075, KL: 0.00022], test: [0.78865, KL: 0.00014], best MSE loss: 0.76396
iter 8000 | train loss: [MSE: 0.72606, KL: 0.00018], test: [0.77008, KL: 0.00014], best MSE loss: 0.76396
iter 9000 | train loss: [MSE: 0.70350, KL: 0.00014], test: [0.76364, KL: 0.00009], best MSE loss: 0.76364
iter 10000 | train loss: [MSE: 0.70656, KL: 0.00012], test: [0.76827, KL: 0.00007], best MSE loss: 0.76364
iter 11000 | train loss: [MSE: 0.69896, KL: 0.00010], test: [0.78452, KL: 0.00011], best MSE loss: 0.76364
iter 12000 | train loss: [MSE: 0.70267, KL: 0.00009], test: [0.77105, KL: 0.00010], best MSE loss: 0.76364
iter 13000 | train loss: [MSE: 0.69989, KL: 0.00008], test: [0.76015, KL: 0.00005], best MSE loss: 0.76015
iter 14000 | train loss: [MSE: 0.68318, KL: 0.00007], test: [0.76288, KL: 0.00006], best MSE loss: 0.76015
iter 15000 | train loss: [MSE: 0.68732, KL: 0.00007], test: [0.76744, KL: 0.00004], best MSE loss: 0.76015
iter 16000 | train loss: [MSE: 0.69372, KL: 0.00006], test: [0.77330, KL: 0.00004], best MSE loss: 0.76015
iter 17000 | train loss: [MSE: 0.69758, KL: 0.00008], test: [0.78354, KL: 0.00006], best MSE loss: 0.76015
iter 18000 | train loss: [MSE: 0.68347, KL: 0.00007], test: [0.76873, KL: 0.00004], best MSE loss: 0.76015
iter 19000 | train loss: [MSE: 0.69653, KL: 0.00006], test: [0.79448, KL: 0.00004], best MSE loss: 0.76015
iter 20000 | train loss: [MSE: 0.68304, KL: 0.00006], test: [0.76680, KL: 0.00009], best MSE loss: 0.76015
iter 21000 | train loss: [MSE: 0.68383, KL: 0.00005], test: [0.77290, KL: 0.00004], best MSE loss: 0.76015
iter 22000 | train loss: [MSE: 0.67857, KL: 0.00005], test: [0.77130, KL: 0.00007], best MSE loss: 0.76015
iter 23000 | train loss: [MSE: 0.66574, KL: 0.00005], test: [0.75059, KL: 0.00007], best MSE loss: 0.75059
iter 24000 | train loss: [MSE: 0.68476, KL: 0.00004], test: [0.75678, KL: 0.00003], best MSE loss: 0.75059
iter 25000 | train loss: [MSE: 0.67232, KL: 0.00004], test: [0.76417, KL: 0.00003], best MSE loss: 0.75059
iter 26000 | train loss: [MSE: 0.67976, KL: 0.00005], test: [0.77356, KL: 0.00003], best MSE loss: 0.75059
iter 27000 | train loss: [MSE: 0.68326, KL: 0.00004], test: [0.76327, KL: 0.00005], best MSE loss: 0.75059
iter 28000 | train loss: [MSE: 0.65831, KL: 0.00004], test: [0.76054, KL: 0.00003], best MSE loss: 0.75059
iter 29000 | train loss: [MSE: 0.67100, KL: 0.00003], test: [0.77564, KL: 0.00003], best MSE loss: 0.75059
iter 30000 | train loss: [MSE: 0.67385, KL: 0.00004], test: [0.76087, KL: 0.00004], best MSE loss: 0.75059
iter 31000 | train loss: [MSE: 0.67085, KL: 0.00004], test: [0.78684, KL: 0.00002], best MSE loss: 0.75059
iter 32000 | train loss: [MSE: 0.66827, KL: 0.00003], test: [0.77002, KL: 0.00002], best MSE loss: 0.75059
iter 33000 | train loss: [MSE: 0.66123, KL: 0.00003], test: [0.77884, KL: 0.00005], best MSE loss: 0.75059
iter 34000 | train loss: [MSE: 0.65257, KL: 0.00003], test: [0.77634, KL: 0.00001], best MSE loss: 0.75059
iter 35000 | train loss: [MSE: 0.66574, KL: 0.00003], test: [0.78975, KL: 0.00002], best MSE loss: 0.75059
iter 36000 | train loss: [MSE: 0.65437, KL: 0.00003], test: [0.78020, KL: 0.00003], best MSE loss: 0.75059
iter 37000 | train loss: [MSE: 0.67248, KL: 0.00003], test: [0.76217, KL: 0.00003], best MSE loss: 0.75059
iter 38000 | train loss: [MSE: 0.66776, KL: 0.00004], test: [0.79197, KL: 0.00001], best MSE loss: 0.75059
iter 39000 | train loss: [MSE: 0.64481, KL: 0.00003], test: [0.78283, KL: 0.00001], best MSE loss: 0.75059
iter 40000 | train loss: [MSE: 0.65108, KL: 0.00003], test: [0.77667, KL: 0.00003], best MSE loss: 0.75059
iter 41000 | train loss: [MSE: 0.66389, KL: 0.00003], test: [0.77158, KL: 0.00001], best MSE loss: 0.75059
iter 42000 | train loss: [MSE: 0.67370, KL: 0.00002], test: [0.78681, KL: 0.00002], best MSE loss: 0.75059
iter 43000 | train loss: [MSE: 0.65463, KL: 0.00002], test: [0.78405, KL: 0.00001], best MSE loss: 0.75059
iter 44000 | train loss: [MSE: 0.63774, KL: 0.00002], test: [0.78471, KL: 0.00002], best MSE loss: 0.75059
iter 45000 | train loss: [MSE: 0.65354, KL: 0.00003], test: [0.77757, KL: 0.00002], best MSE loss: 0.75059
iter 46000 | train loss: [MSE: 0.63459, KL: 0.00002], test: [0.79173, KL: 0.00001], best MSE loss: 0.75059
iter 47000 | train loss: [MSE: 0.63982, KL: 0.00003], test: [0.79470, KL: 0.00002], best MSE loss: 0.75059
iter 48000 | train loss: [MSE: 0.64716, KL: 0.00003], test: [0.77038, KL: 0.00003], best MSE loss: 0.75059
iter 49000 | train loss: [MSE: 0.64809, KL: 0.00002], test: [0.77659, KL: 0.00003], best MSE loss: 0.75059
iter 50000 | train loss: [MSE: 0.65376, KL: 0.00002], test: [0.78215, KL: 0.00002], best MSE loss: 0.75059
iter 51000 | train loss: [MSE: 0.64685, KL: 0.00002], test: [0.76785, KL: 0.00002], best MSE loss: 0.75059
iter 52000 | train loss: [MSE: 0.65246, KL: 0.00002], test: [0.76846, KL: 0.00002], best MSE loss: 0.75059
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=1.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=2.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=3.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=4.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=5.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=6.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=7.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=8.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=9.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=10.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=11.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=12.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=13.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=14.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=15.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=16.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=17.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=18.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=19.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=20.pkl]
8643
[computing action stats]
[done]
will save model as /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards//model=policy-cnn-vae-bsize=32-ncond=10-npred=10-lrt=0.0001-nhidden=100-nfeature=64-nz=4-beta=0.0001
[initializing encoder and decoder with: /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards/model=policy-cnn-bsize=32-ncond=10-npred=10-lrt=0.0001-nhidden=100-nfeature=64.model]
[training]
iter 0 | train loss: [MSE: 0.72595, KL: 0.37353], test: [0.74157, KL: 0.52960], best MSE loss: 0.74157
iter 1000 | train loss: [MSE: 0.67460, KL: 1.40634], test: [0.65244, KL: 2.56886], best MSE loss: 0.65244
iter 2000 | train loss: [MSE: 0.63573, KL: 3.14099], test: [0.62523, KL: 3.42068], best MSE loss: 0.62523
iter 3000 | train loss: [MSE: 0.63132, KL: 4.39678], test: [0.60705, KL: 4.04784], best MSE loss: 0.60705
iter 4000 | train loss: [MSE: 0.60641, KL: 5.45908], test: [0.61190, KL: 5.45981], best MSE loss: 0.60705
iter 5000 | train loss: [MSE: 0.59126, KL: 6.26850], test: [0.60080, KL: 6.23480], best MSE loss: 0.60080
iter 6000 | train loss: [MSE: 0.59419, KL: 6.90858], test: [0.60426, KL: 6.25209], best MSE loss: 0.60080
iter 7000 | train loss: [MSE: 0.59891, KL: 7.29948], test: [0.58061, KL: 6.55858], best MSE loss: 0.58061
iter 8000 | train loss: [MSE: 0.57710, KL: 7.96379], test: [0.57828, KL: 7.67097], best MSE loss: 0.57828
iter 9000 | train loss: [MSE: 0.56963, KL: 8.97212], test: [0.53544, KL: 8.86114], best MSE loss: 0.53544
iter 10000 | train loss: [MSE: 0.55992, KL: 10.22680], test: [0.52934, KL: 10.32369], best MSE loss: 0.52934
iter 11000 | train loss: [MSE: 0.53034, KL: 11.39737], test: [0.53167, KL: 11.06368], best MSE loss: 0.52934
iter 12000 | train loss: [MSE: 0.51742, KL: 12.34282], test: [0.50308, KL: 11.91580], best MSE loss: 0.50308
iter 13000 | train loss: [MSE: 0.49601, KL: 13.07182], test: [0.47604, KL: 12.61969], best MSE loss: 0.47604
iter 14000 | train loss: [MSE: 0.49013, KL: 13.67342], test: [0.46294, KL: 13.54541], best MSE loss: 0.46294
iter 15000 | train loss: [MSE: 0.47744, KL: 14.13715], test: [0.46103, KL: 13.89100], best MSE loss: 0.46103
iter 16000 | train loss: [MSE: 0.46628, KL: 14.59249], test: [0.44089, KL: 13.81796], best MSE loss: 0.44089
iter 17000 | train loss: [MSE: 0.46441, KL: 14.81088], test: [0.44237, KL: 14.15762], best MSE loss: 0.44089
iter 18000 | train loss: [MSE: 0.46265, KL: 14.93715], test: [0.43503, KL: 14.48480], best MSE loss: 0.43503
iter 19000 | train loss: [MSE: 0.44827, KL: 15.17490], test: [0.41735, KL: 14.64425], best MSE loss: 0.41735
iter 20000 | train loss: [MSE: 0.45133, KL: 15.29600], test: [0.42306, KL: 14.95095], best MSE loss: 0.41735
iter 21000 | train loss: [MSE: 0.45120, KL: 15.46873], test: [0.41902, KL: 15.41306], best MSE loss: 0.41735
iter 22000 | train loss: [MSE: 0.44218, KL: 15.57060], test: [0.42048, KL: 15.21277], best MSE loss: 0.41735
iter 23000 | train loss: [MSE: 0.42728, KL: 15.59239], test: [0.41706, KL: 15.49436], best MSE loss: 0.41706
iter 24000 | train loss: [MSE: 0.44206, KL: 15.65454], test: [0.40274, KL: 15.48820], best MSE loss: 0.40274
iter 25000 | train loss: [MSE: 0.42163, KL: 15.79650], test: [0.40200, KL: 15.30372], best MSE loss: 0.40200
iter 26000 | train loss: [MSE: 0.42673, KL: 15.84503], test: [0.41662, KL: 15.60103], best MSE loss: 0.40200
iter 27000 | train loss: [MSE: 0.41489, KL: 15.88295], test: [0.39972, KL: 15.21421], best MSE loss: 0.39972
iter 28000 | train loss: [MSE: 0.42211, KL: 15.86343], test: [0.38545, KL: 15.29213], best MSE loss: 0.38545
iter 29000 | train loss: [MSE: 0.41763, KL: 15.81537], test: [0.38755, KL: 15.37013], best MSE loss: 0.38545
iter 30000 | train loss: [MSE: 0.41544, KL: 15.85479], test: [0.38358, KL: 15.62792], best MSE loss: 0.38358
iter 31000 | train loss: [MSE: 0.41827, KL: 15.86933], test: [0.38418, KL: 15.65589], best MSE loss: 0.38358
iter 32000 | train loss: [MSE: 0.41738, KL: 15.87212], test: [0.38232, KL: 15.41929], best MSE loss: 0.38232
iter 33000 | train loss: [MSE: 0.41642, KL: 15.87326], test: [0.38570, KL: 15.54417], best MSE loss: 0.38232
iter 34000 | train loss: [MSE: 0.41539, KL: 15.95107], test: [0.38336, KL: 15.47831], best MSE loss: 0.38232
iter 35000 | train loss: [MSE: 0.40274, KL: 15.95377], test: [0.38058, KL: 15.55434], best MSE loss: 0.38058
iter 36000 | train loss: [MSE: 0.40065, KL: 15.92963], test: [0.38053, KL: 15.48154], best MSE loss: 0.38053
iter 37000 | train loss: [MSE: 0.39921, KL: 15.90975], test: [0.36351, KL: 15.48813], best MSE loss: 0.36351
iter 38000 | train loss: [MSE: 0.39319, KL: 15.89866], test: [0.37392, KL: 15.33160], best MSE loss: 0.36351
iter 39000 | train loss: [MSE: 0.39273, KL: 15.95400], test: [0.36826, KL: 15.50131], best MSE loss: 0.36351
iter 40000 | train loss: [MSE: 0.38497, KL: 15.98785], test: [0.37297, KL: 15.56061], best MSE loss: 0.36351
iter 41000 | train loss: [MSE: 0.38573, KL: 16.02194], test: [0.39256, KL: 15.61809], best MSE loss: 0.36351
iter 42000 | train loss: [MSE: 0.38908, KL: 16.10358], test: [0.36921, KL: 15.19503], best MSE loss: 0.36351
iter 43000 | train loss: [MSE: 0.38071, KL: 16.08439], test: [0.36563, KL: 15.63601], best MSE loss: 0.36351
iter 44000 | train loss: [MSE: 0.38595, KL: 16.10555], test: [0.36329, KL: 15.55158], best MSE loss: 0.36329
iter 45000 | train loss: [MSE: 0.37784, KL: 16.12078], test: [0.35382, KL: 15.56396], best MSE loss: 0.35382
iter 46000 | train loss: [MSE: 0.38163, KL: 16.13682], test: [0.36424, KL: 15.74882], best MSE loss: 0.35382
iter 47000 | train loss: [MSE: 0.38475, KL: 16.17523], test: [0.36043, KL: 15.63358], best MSE loss: 0.35382
iter 48000 | train loss: [MSE: 0.38318, KL: 16.17816], test: [0.35963, KL: 15.69666], best MSE loss: 0.35382
iter 49000 | train loss: [MSE: 0.36694, KL: 16.21311], test: [0.36383, KL: 15.74574], best MSE loss: 0.35382
iter 50000 | train loss: [MSE: 0.36846, KL: 16.27033], test: [0.34955, KL: 15.88266], best MSE loss: 0.34955
iter 51000 | train loss: [MSE: 0.37568, KL: 16.27929], test: [0.34783, KL: 15.85352], best MSE loss: 0.34783
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=1.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=2.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=3.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=4.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=5.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=6.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=7.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=8.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=9.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=10.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=11.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=12.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=13.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=14.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=15.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=16.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=17.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=18.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=19.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=20.pkl]
8643
[computing action stats]
[done]
will save model as /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards//model=policy-cnn-vae-bsize=32-ncond=10-npred=20-lrt=0.0001-nhidden=100-nfeature=64-nz=4-beta=0.0001
[initializing encoder and decoder with: /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards/model=policy-cnn-bsize=32-ncond=10-npred=20-lrt=0.0001-nhidden=100-nfeature=64.model]
[training]
iter 0 | train loss: [MSE: 0.76612, KL: 1.61923], test: [0.72747, KL: 2.98718], best MSE loss: 0.72747
iter 1000 | train loss: [MSE: 0.71778, KL: 4.24395], test: [0.70612, KL: 3.64536], best MSE loss: 0.70612
iter 2000 | train loss: [MSE: 0.68215, KL: 5.63240], test: [0.68790, KL: 5.39672], best MSE loss: 0.68790
iter 3000 | train loss: [MSE: 0.66593, KL: 6.57426], test: [0.67119, KL: 6.81480], best MSE loss: 0.67119
iter 4000 | train loss: [MSE: 0.66352, KL: 7.20568], test: [0.65851, KL: 6.79637], best MSE loss: 0.65851
iter 5000 | train loss: [MSE: 0.65221, KL: 7.70873], test: [0.65110, KL: 6.65421], best MSE loss: 0.65110
iter 6000 | train loss: [MSE: 0.63577, KL: 8.39072], test: [0.64185, KL: 7.83057], best MSE loss: 0.64185
iter 7000 | train loss: [MSE: 0.62209, KL: 9.44613], test: [0.62686, KL: 9.42678], best MSE loss: 0.62686
iter 8000 | train loss: [MSE: 0.61253, KL: 10.70981], test: [0.62855, KL: 9.86597], best MSE loss: 0.62686
iter 9000 | train loss: [MSE: 0.61129, KL: 11.65073], test: [0.62339, KL: 11.10454], best MSE loss: 0.62339
iter 10000 | train loss: [MSE: 0.61182, KL: 12.25350], test: [0.62238, KL: 11.73521], best MSE loss: 0.62238
iter 11000 | train loss: [MSE: 0.60628, KL: 12.78053], test: [0.61673, KL: 12.27618], best MSE loss: 0.61673
iter 12000 | train loss: [MSE: 0.59414, KL: 13.21443], test: [0.60600, KL: 12.93360], best MSE loss: 0.60600
iter 13000 | train loss: [MSE: 0.60042, KL: 13.50901], test: [0.60627, KL: 12.95783], best MSE loss: 0.60600
iter 14000 | train loss: [MSE: 0.58607, KL: 13.69074], test: [0.60172, KL: 12.78510], best MSE loss: 0.60172
iter 15000 | train loss: [MSE: 0.58634, KL: 13.82774], test: [0.60272, KL: 12.97827], best MSE loss: 0.60172
iter 16000 | train loss: [MSE: 0.58842, KL: 13.96325], test: [0.59727, KL: 13.70670], best MSE loss: 0.59727
iter 17000 | train loss: [MSE: 0.58752, KL: 14.08581], test: [0.59638, KL: 13.42757], best MSE loss: 0.59638
iter 18000 | train loss: [MSE: 0.58501, KL: 14.20745], test: [0.60774, KL: 13.50321], best MSE loss: 0.59638
iter 19000 | train loss: [MSE: 0.57775, KL: 14.20917], test: [0.57737, KL: 13.60817], best MSE loss: 0.57737
iter 20000 | train loss: [MSE: 0.58364, KL: 14.22319], test: [0.58745, KL: 13.90759], best MSE loss: 0.57737
iter 21000 | train loss: [MSE: 0.57634, KL: 14.23250], test: [0.58729, KL: 13.60713], best MSE loss: 0.57737
iter 22000 | train loss: [MSE: 0.58346, KL: 14.25219], test: [0.58624, KL: 13.43570], best MSE loss: 0.57737
iter 23000 | train loss: [MSE: 0.57804, KL: 14.26272], test: [0.57723, KL: 13.29661], best MSE loss: 0.57723
iter 24000 | train loss: [MSE: 0.57590, KL: 14.21121], test: [0.58646, KL: 13.41483], best MSE loss: 0.57723
iter 25000 | train loss: [MSE: 0.58285, KL: 14.17654], test: [0.57901, KL: 13.52327], best MSE loss: 0.57723
iter 26000 | train loss: [MSE: 0.57310, KL: 14.15956], test: [0.58992, KL: 13.66422], best MSE loss: 0.57723
iter 27000 | train loss: [MSE: 0.57611, KL: 14.22945], test: [0.57889, KL: 13.73454], best MSE loss: 0.57723
iter 28000 | train loss: [MSE: 0.58006, KL: 14.22598], test: [0.57846, KL: 13.40924], best MSE loss: 0.57723
iter 29000 | train loss: [MSE: 0.57193, KL: 14.16430], test: [0.58469, KL: 13.57241], best MSE loss: 0.57723
iter 30000 | train loss: [MSE: 0.57115, KL: 14.14438], test: [0.58456, KL: 13.50767], best MSE loss: 0.57723
iter 31000 | train loss: [MSE: 0.56923, KL: 14.10695], test: [0.58457, KL: 13.44733], best MSE loss: 0.57723
iter 32000 | train loss: [MSE: 0.57002, KL: 14.13593], test: [0.57654, KL: 13.55508], best MSE loss: 0.57654
iter 33000 | train loss: [MSE: 0.56421, KL: 14.16207], test: [0.58395, KL: 13.67356], best MSE loss: 0.57654
iter 34000 | train loss: [MSE: 0.57106, KL: 14.09502], test: [0.58663, KL: 13.63808], best MSE loss: 0.57654
iter 35000 | train loss: [MSE: 0.56982, KL: 14.14066], test: [0.58545, KL: 13.80152], best MSE loss: 0.57654
iter 36000 | train loss: [MSE: 0.57160, KL: 14.18166], test: [0.58860, KL: 13.61909], best MSE loss: 0.57654
iter 37000 | train loss: [MSE: 0.56862, KL: 14.20298], test: [0.57833, KL: 13.59882], best MSE loss: 0.57654
iter 38000 | train loss: [MSE: 0.56182, KL: 14.17941], test: [0.57816, KL: 13.71708], best MSE loss: 0.57654
iter 39000 | train loss: [MSE: 0.55778, KL: 14.14154], test: [0.57930, KL: 13.74664], best MSE loss: 0.57654
iter 40000 | train loss: [MSE: 0.56908, KL: 14.13576], test: [0.58404, KL: 13.35713], best MSE loss: 0.57654
iter 41000 | train loss: [MSE: 0.55067, KL: 14.21644], test: [0.57730, KL: 13.51328], best MSE loss: 0.57654
iter 42000 | train loss: [MSE: 0.54998, KL: 14.19458], test: [0.57403, KL: 13.84977], best MSE loss: 0.57403
iter 43000 | train loss: [MSE: 0.56407, KL: 14.19945], test: [0.57686, KL: 13.42834], best MSE loss: 0.57403
iter 44000 | train loss: [MSE: 0.55182, KL: 14.19712], test: [0.57568, KL: 13.41265], best MSE loss: 0.57403
iter 45000 | train loss: [MSE: 0.56463, KL: 14.23328], test: [0.57789, KL: 13.70598], best MSE loss: 0.57403
iter 46000 | train loss: [MSE: 0.56176, KL: 14.23842], test: [0.57167, KL: 13.82764], best MSE loss: 0.57167
iter 47000 | train loss: [MSE: 0.54880, KL: 14.22722], test: [0.56501, KL: 13.65127], best MSE loss: 0.56501
iter 48000 | train loss: [MSE: 0.56057, KL: 14.17136], test: [0.56416, KL: 13.73075], best MSE loss: 0.56416
iter 49000 | train loss: [MSE: 0.54555, KL: 14.21897], test: [0.56775, KL: 13.96016], best MSE loss: 0.56416
iter 50000 | train loss: [MSE: 0.55268, KL: 14.21749], test: [0.55974, KL: 13.90279], best MSE loss: 0.55974
iter 51000 | train loss: [MSE: 0.53804, KL: 14.23307], test: [0.56011, KL: 13.83341], best MSE loss: 0.55974
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=1.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=2.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=3.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=4.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=5.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=6.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=7.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=8.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=9.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=10.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=11.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=12.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=13.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=14.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=15.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=16.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=17.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=18.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=19.pkl]
[loading /misc/vlgscratch4/LecunGroup/nvidia-collab/data//traffic_data_lanes=8-episodes=20-seed=20.pkl]
8643
[computing action stats]
[done]
will save model as /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards//model=policy-cnn-vae-bsize=32-ncond=10-npred=20-lrt=0.0001-nhidden=100-nfeature=64-nz=4-beta=0.1
[initializing encoder and decoder with: /misc/vlgscratch4/LecunGroup/nvidia-collab/models_20-shards/model=policy-cnn-bsize=32-ncond=10-npred=20-lrt=0.0001-nhidden=100-nfeature=64.model]
[training]
iter 0 | train loss: [MSE: 0.79635, KL: 0.08062], test: [0.83987, KL: 0.07890], best MSE loss: 0.83987
iter 1000 | train loss: [MSE: 0.77373, KL: 0.14760], test: [0.79861, KL: 0.16321], best MSE loss: 0.79861
iter 2000 | train loss: [MSE: 0.76920, KL: 0.18134], test: [0.77255, KL: 0.16585], best MSE loss: 0.77255
iter 3000 | train loss: [MSE: 0.75440, KL: 0.18624], test: [0.79263, KL: 0.14072], best MSE loss: 0.77255
iter 4000 | train loss: [MSE: 0.74723, KL: 0.19273], test: [0.76905, KL: 0.23140], best MSE loss: 0.76905
iter 5000 | train loss: [MSE: 0.74865, KL: 0.21797], test: [0.77087, KL: 0.32199], best MSE loss: 0.76905
iter 6000 | train loss: [MSE: 0.74181, KL: 0.23234], test: [0.76067, KL: 0.22157], best MSE loss: 0.76067
iter 7000 | train loss: [MSE: 0.73182, KL: 0.23308], test: [0.77759, KL: 0.23697], best MSE loss: 0.76067
iter 8000 | train loss: [MSE: 0.72278, KL: 0.24315], test: [0.76794, KL: 0.23303], best MSE loss: 0.76067
iter 9000 | train loss: [MSE: 0.73108, KL: 0.25214], test: [0.75738, KL: 0.24398], best MSE loss: 0.75738
iter 10000 | train loss: [MSE: 0.71998, KL: 0.24587], test: [0.77023, KL: 0.23286], best MSE loss: 0.75738
iter 11000 | train loss: [MSE: 0.73877, KL: 0.24405], test: [0.76783, KL: 0.24087], best MSE loss: 0.75738
iter 12000 | train loss: [MSE: 0.72142, KL: 0.24661], test: [0.75911, KL: 0.24366], best MSE loss: 0.75738
iter 13000 | train loss: [MSE: 0.70807, KL: 0.24496], test: [0.77152, KL: 0.26988], best MSE loss: 0.75738
iter 14000 | train loss: [MSE: 0.71691, KL: 0.24645], test: [0.77658, KL: 0.21480], best MSE loss: 0.75738
iter 15000 | train loss: [MSE: 0.70873, KL: 0.23562], test: [0.77729, KL: 0.22857], best MSE loss: 0.75738
iter 16000 | train loss: [MSE: 0.71435, KL: 0.23439], test: [0.77636, KL: 0.19498], best MSE loss: 0.75738
iter 17000 | train loss: [MSE: 0.71023, KL: 0.22974], test: [0.76483, KL: 0.23243], best MSE loss: 0.75738
iter 18000 | train loss: [MSE: 0.71804, KL: 0.22080], test: [0.77330, KL: 0.21144], best MSE loss: 0.75738
iter 19000 | train loss: [MSE: 0.69444, KL: 0.21873], test: [0.74866, KL: 0.29394], best MSE loss: 0.74866
iter 20000 | train loss: [MSE: 0.69714, KL: 0.22213], test: [0.77286, KL: 0.20922], best MSE loss: 0.74866
iter 21000 | train loss: [MSE: 0.70526, KL: 0.21217], test: [0.78418, KL: 0.21110], best MSE loss: 0.74866
iter 22000 | train loss: [MSE: 0.70723, KL: 0.21378], test: [0.76836, KL: 0.21654], best MSE loss: 0.74866
iter 23000 | train loss: [MSE: 0.70200, KL: 0.20254], test: [0.76998, KL: 0.22828], best MSE loss: 0.74866
iter 24000 | train loss: [MSE: 0.69102, KL: 0.20474], test: [0.77960, KL: 0.18912], best MSE loss: 0.74866
iter 25000 | train loss: [MSE: 0.69996, KL: 0.19766], test: [0.77924, KL: 0.21513], best MSE loss: 0.74866
iter 26000 | train loss: [MSE: 0.69486, KL: 0.19900], test: [0.76482, KL: 0.20263], best MSE loss: 0.74866
iter 27000 | train loss: [MSE: 0.69423, KL: 0.19179], test: [0.77989, KL: 0.18414], best MSE loss: 0.74866
iter 28000 | train loss: [MSE: 0.68994, KL: 0.17911], test: [0.79214, KL: 0.17362], best MSE loss: 0.74866
iter 29000 | train loss: [MSE: 0.70350, KL: 0.18106], test: [0.77464, KL: 0.17569], best MSE loss: 0.74866
iter 30000 | train loss: [MSE: 0.69236, KL: 0.17835], test: [0.79024, KL: 0.20775], best MSE loss: 0.74866
iter 31000 | train loss: [MSE: 0.68325, KL: 0.18161], test: [0.79256, KL: 0.17665], best MSE loss: 0.74866
iter 32000 | train loss: [MSE: 0.68553, KL: 0.17348], test: [0.78842, KL: 0.17390], best MSE loss: 0.74866
iter 33000 | train loss: [MSE: 0.69388, KL: 0.16595], test: [0.78406, KL: 0.16766], best MSE loss: 0.74866
iter 34000 | train loss: [MSE: 0.68387, KL: 0.16163], test: [0.79839, KL: 0.18642], best MSE loss: 0.74866
iter 35000 | train loss: [MSE: 0.68390, KL: 0.15513], test: [0.79899, KL: 0.16073], best MSE loss: 0.74866
iter 36000 | train loss: [MSE: 0.68517, KL: 0.16295], test: [0.78056, KL: 0.19157], best MSE loss: 0.74866
iter 37000 | train loss: [MSE: 0.69062, KL: 0.15181], test: [0.79062, KL: 0.16752], best MSE loss: 0.74866
iter 38000 | train loss: [MSE: 0.68114, KL: 0.15343], test: [0.78339, KL: 0.16394], best MSE loss: 0.74866
iter 39000 | train loss: [MSE: 0.67875, KL: 0.14640], test: [0.79006, KL: 0.17694], best MSE loss: 0.74866
iter 40000 | train loss: [MSE: 0.67951, KL: 0.14086], test: [0.78997, KL: 0.16218], best MSE loss: 0.74866
iter 41000 | train loss: [MSE: 0.67788, KL: 0.13770], test: [0.79117, KL: 0.19208], best MSE loss: 0.74866
iter 42000 | train loss: [MSE: 0.68443, KL: 0.13978], test: [0.82676, KL: 0.14609], best MSE loss: 0.74866
iter 43000 | train loss: [MSE: 0.67741, KL: 0.13314], test: [0.81034, KL: 0.13914], best MSE loss: 0.74866
iter 44000 | train loss: [MSE: 0.67532, KL: 0.12833], test: [0.81086, KL: 0.13698], best MSE loss: 0.74866
iter 45000 | train loss: [MSE: 0.66872, KL: 0.12998], test: [0.79924, KL: 0.12420], best MSE loss: 0.74866
iter 46000 | train loss: [MSE: 0.67027, KL: 0.12208], test: [0.80603, KL: 0.12637], best MSE loss: 0.74866
iter 47000 | train loss: [MSE: 0.68053, KL: 0.11705], test: [0.81682, KL: 0.11319], best MSE loss: 0.74866
iter 48000 | train loss: [MSE: 0.67368, KL: 0.11121], test: [0.82281, KL: 0.11680], best MSE loss: 0.74866
iter 49000 | train loss: [MSE: 0.67570, KL: 0.11172], test: [0.80850, KL: 0.10635], best MSE loss: 0.74866
iter 50000 | train loss: [MSE: 0.67493, KL: 0.10698], test: [0.82426, KL: 0.10607], best MSE loss: 0.74866
iter 51000 | train loss: [MSE: 0.67440, KL: 0.10778], test: [0.79770, KL: 0.10811], best MSE loss: 0.74866
iter 52000 | train loss: [MSE: 0.67741, KL: 0.11268], test: [0.80587, KL: 0.11299], best MSE loss: 0.74866
